# -*- coding: utf-8 -*-
"""covid analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YZnp-QSzeO9FFNT2RDS1uLOT4Y9AoNv4
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
import plotly.express as px
from plotly.subplots import make_subplots
from datetime import datetime

covid_df=pd.read_csv('covid_19_india.csv')



covid_df

covid_df.head()

covid_df.info()

covid_df.describe()

vaccine_df=pd.read_csv("covid_vaccine_statewise.csv")

vaccine_df

vaccine_df.head()

covid_df.drop(["Sno","Time","ConfirmedIndianNational","ConfirmedForeignNational"],inplace=True,axis=1)

covid_df.head()

covid_df["Date"]=pd.to_datetime(covid_df["Date"],format="%Y-%m-%d")

#find active cases
covid_df["Active_cases"]=covid_df["Confirmed"]-(covid_df["Cured"]+covid_df["Deaths"])
covid_df.tail()



#pivot table use pandas
state_wise=pd.pivot_table(covid_df,values=["Confirmed","Deaths","Cured"], # "Curved" was likely a typo and has been changed to "Cured"
                         index="State/UnionTerritory",aggfunc=max)

#recocery rate
state_wise["Recovery_rate"]=state_wise["Cured"]*100/state_wise["Confirmed"]

state_wise["Recovery_rate"]

#mortality rate
state_wise["Mortality Rate"]=state_wise["Deaths"]*100/state_wise["Confirmed"]

state_wise["Mortality Rate"]



#sort the values in descending order
state_wise = state_wise.sort_values(by="Confirmed",ascending=False) # Changed Fasle to False

state_wise.style.background_gradient(cmap="cubehelix")

#top 10 active covid cases
 top10 active cases=covid_df.groupby(by="State/UnionTerritory").max()[["Active_cases","Date"]].
sort_values(by="Active_cases",ascending=False).head(10)

#top 10 active covid cases
top10_active_cases=covid_df.groupby(by="State/UnionTerritory").max()[["Active_cases","Date"]].sort_values(by="Active_cases",ascending=False).head(10) #Removed whitespace and fixed variable name

top10_active_cases

#top 10 active covid cases
top10_active_cases=covid_df.groupby(by="State/UnionTerritory").max()[["Active_cases","Date"]].\
sort_values(by="Active_cases",ascending=False).head(10) #removed the indent and the space in the variable name

fig=plt.figure(figsize=(16,9))
plt.title("top 10 cases most active in india",size=25)

ax=sns.barplot(data=top10_active_cases.iloc[:10],y="Active_cases",x="State/UnionTerritory",linewidth=2,edgecolor="red")

fig=plt.figure(figsize=(16,9))
plt.title("top 10 cases most active in india",size=25)
ax=sns.barplot(data=top10_active_cases.iloc[:10],y="Active_cases",x="State/UnionTerritory",linewidth=2,edgecolor="red")
plt.xlabel("State")
plt.ylabel("Total Active Cases")

#top states with heighest score deaths
top_10_deaths=covid_df.groupby(by="State/UnionTerritory").max()[["Deaths","Date"]].sort_values(by=["Deaths"],ascending=False)

top_10_deaths

fig=plt.figure(figsize=(16,9))
plt.title("top 10 states with mosts ",size=25)
ax=sns.barplot(data=top_10_deaths.iloc[:10],y="Deaths",x="State/UnionTerritory",linewidth=2,edgecolor="red")
plt.xlabel("State")
plt.ylabel("Total Deaths cases")

#growth trend
fig=plt.figure(figsize=(12,6))
ax=sns.lineplot(data=covid_df[covid_df["State/UnionTerritory"].isin(["Maharastra","Karnataka","kerla","Tamil Nadu","Uttar Pradesh"])],
x="Date",y="Active_cases",hue="State/UnionTerritory")
ax.set_title("top 5 affected state in india")

vaccine_df.head()

vaccine_df.rename(columns={"Updated On":"Vaccine_Date"},inplace=True)

vaccine_df.head(10)

vaccine_df.info()

vaccine_df.isnull().sum()



vaccination=vaccine_df.drop(columns=["Spuntik V(Doses Administred)","AEFI","18_44 Years (Doses Administreted","45-60Years(Doses Administered)"],axis=1)

vaccination=vaccine_df.drop(columns=["Sputnik V (Doses Administered)","AEFI","18-44 Years (Doses Administered)","45-60 Years (Doses Administered)"],axis=1)
#Corrected typos and spacing in column names.

vaccination = vaccine_df.drop(columns=["Sputnik V (Doses Administered)","AEFI","18-44 Years (Doses Administered)","45-60 Years (Doses Administered)"], axis=1)
#Corrected the spelling of "Sputnik" and replaced underscores "_" with hyphens "-" in the column names.

vaccination.head()

#vacationaion for male and female vaccaintaio
male=vaccination["Male(Individuals Vaccinated)"].sum()
female=vaccination["Female(Individuals Vaccinated)"].sum()

# Corrected the spelling of "vaccination"
# Corrected the spelling of "sum()"
male = vaccination["Male(Individuals Vaccinated)"].sum()
female = vaccination["Female(Individuals Vaccinated)"].sum()
px.pie(values=[male,female],names=["male","female"],title="Male and Female Vaccination")

#remove rows where stat =India
vaccine=vaccine_df[vaccine_df.State!="India"]

vaccine

vaccine.rename(columns={"Total Individuals Vaccinated":"Total"},inplace=True)

vaccine

#most vaccinated state
max_vac=vaccine.groupby("State")["Total"].sum().to_frame("Total")
max_vac=max_vac.sort_values("Total",ascending=False).head(5) # Use head() to get the top 5 values after sorting.

max_vac

fig=plt.figure(figsize=(10,7))
plt.title("Top  5 Vaccinated States in India",size=20)
x=sns.barplot(data=max_vac.iloc[:10],y=max_vac.Total,x=max_vac.index,linewidth=2,edgecolor="red")
plt.xlabel("State")
plt.ylabel("Vaccinated")
plt.show()





import matplotlib.pyplot as plt
import seaborn as sns

# Assuming 'vaccine' is the DataFrame with state vaccination data
max_vac = vaccine.groupby("State")["Total"].sum().to_frame("Total")
max_vac = max_vac.sort_values("Total", ascending=False).head(5).reset_index()  # Resetting index

# Plotting
fig = plt.figure(figsize=(10, 7))
plt.title("Top 5 Vaccinated States in India", size=20)

# The x should refer to 'State' column after resetting the index
sns.barplot(data=max_vac, y="Total", x="State", linewidth=2, edgecolor="red")

plt.xlabel("States")  # Make sure plt.xlabel is not overwritten anywhere
plt.ylabel("Vaccinated")

plt.show()

